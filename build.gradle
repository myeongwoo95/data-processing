plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.1.2' // jib
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    /* Web */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'

    /* lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* Maria */
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    /* JPA */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    /* 압축파일 */
    implementation 'org.apache.commons:commons-compress:1.21'

    /* jackson */
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'

    /* 엑셀 */
    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

    /* Test */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 빌드시 plain.jar 생성 막기 (스프링부터 2.5부터는 빌드시 자동으로 plain.jar가 생성됨)
jar {
    enabled = false
}

jib {
    from {
        image = "adoptopenjdk:11-jre" // 도커라이징할 베이스 이미지 (openjdk-8-jre인가 이것도 괜찮)
    }
    to {
        image = "myeongwoo95/data-processing" // 이미지가 저장될 레포지터리(repo 자동생성됨)
        tags = ["latest"] // 태그
    }

    container {
        jvmFlags = ["-Xms2g", "-Xmx4g"] //  Xms128m: JVM의 초기 힙 크기, Xmx128m JVM의 최대 힙 크기(초과 시 OutOfMemoryError)
    }
}